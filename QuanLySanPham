#include <iostream>
#include <string>

using namespace std;

struct Product
{
	string name;
	int price;
	int quantity;
	
	friend istream& operator>>(istream &is, Product &product)
	{
		cout << "Nhap ten: ";
		is.ignore();
		getline(is, product.name);
		cout << "Nhap don gia: ";
		is >> product.price;
		cout << "Nhap so luong: ";
		is >> product.quantity;
		
		return is;
	}
	
	friend ostream& operator<<(ostream &os, Product &product)
	{
		cout << "Ten: " << product.name;
		cout << " , don gia: " << product.price;
		cout << " , so luong: " << product.quantity;
		
		return os;
	}
};

int show_menu();
void print_products(Product *products, int size);
void add_products(Product* &products, int &size);
void delete_product(Product* &products, int &size);

int main()
{
	int size = 0;
	Product *products = new Product[size];
	while(true)
	{
		int chose = show_menu();
		
		system("cls");
		switch(chose)
		{
			case 1:
				print_products(products, size); //Xem danh sach
				break;
			case 2:
				add_products(products, size); //Nhap san pham
				break;
			case 3:
				delete_product(products, size); //Xoa san pham
				break;
			case 0:
				cout << "Bye bye!" << endl;
				return 0;
				
			default:
				cout << "Lua chon khong hop le!" << endl;
		}
		
		cout << "Ban co muon tiep tuc khong ? (1/0)" << endl;
		bool is_continue;
		cin >> is_continue;
		
		if(!is_continue)
		{
			cout << "Bye bye!" << endl;
			break;
		}
	}
	
	
	return 0;
}

int show_menu()
{
	system("cls"); //dung de xoa tat ca du lieu dang hien thi
	int chose;
	cout << "==== MENU ====" << endl;
	cout << "1.Xem danh sach san pham" << endl;
	cout << "2.Nhap danh sach san pham" << endl;
	cout << "3.Xoa san pham" << endl;
	cout << "0.Thoat chuong trinh" << endl;
	
	cout << "Lua chon cua ban la: " << endl;
	cin >> chose;
	
	return chose;
}

void print_products(Product *products, int size)
{
	if(!size)
	{
		cout << "Chua co san pham nao." << endl;
	}
	else
	{
		cout << "Danh sach san pham" << endl;
		for(int i = 0; i < size; i++)
		{
			cout << products[i] << endl;
		}
	}
}

void add_products(Product* &products, int &size)
{
	Product new_products;
	cout << "Nhap thong tin san pham moi: " << endl;
	cin >> new_products;
	
	int new_size = size + 1;
	Product *tmp_products = new Product[new_size];
	
	for(int i = 0; i < size; i++)
	{
		tmp_products[i] = products[i];
	}
	tmp_products[new_size - 1]= new_products;
	
	delete products;
	products = tmp_products;
	size = new_size;
	
	cout << "Them san pham thanh cong." << endl;
}

void delete_product(Product* &products, int &size)
{
	cout << "Nhap ten san pham can xoa: " << endl;
	string delete_name;
	cin.ignore();
	getline(cin, delete_name);
	
	int delete_index = -1;
	for(int i = 0; i < size; i++)
	{
		if(!delete_name.compare(products[i].name))
		{
			delete_index = i;
			break;
		}
	}
	
	if(delete_index == -1)
	{
		cout << "Khong tim thay san pham!" << endl;
		return;
	}
	
	for(int i = 0; i < size - 1; i++)
	{
		products[i] = products[i + 1];
	}
	size--;
	
	Product *tmp_products = new Product[size];
	for(int i = 0; i < size; i++)
	{
		tmp_products[i] = products[i];
	}
	
	delete[] products;
	products = tmp_products;
	
	cout << "Xoa thanh cong." << endl;
}
